# Pushされるごとに自動ビルド/テスト/コーディング規約チェックをする
#
# 全てのcommit/pushに対して実行可能・一定の品質・可読しやすいコードである事を要求する。
---
name: Build/Test
run-name: ${{ github.actor }} is testing out GitHub Actions

on:
  # 動作確認しやすいように手動起動をサポート
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# ワークフローレベルでパーミッションをすべて無効化
permissions: {}

# デフォルトシェルでパイプエラーを有効化
defaults:
  run:
    shell: bash

# ワークフローが複数起動したら自動キャンセル
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Build and Test
    timeout-minutes: 10
    runs-on: ubuntu-22.04
    permissions:
      contents: read
    strategy:
      matrix:
        node-version: [20.x, 22.x]

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # node_modulesのキャッシュ
      - name: Cache dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: |
            **/node_modules
            ~/.npm
            ${{ github.workspace }}/.next/cache
          key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-${{ matrix.node-version }}-
            ${{ runner.os }}-node-

      - name: Install dependencies
        if: steps.npm-cache.outputs.cache-hit != 'true'
        run: npm ci

      - name: Build
        run: npm run build

      - name: Unit Tests
        run: npm run test:unit

      - name: Setup Playwright
        run: npx playwright install --with-deps chromium
        
      - name: Integration Tests
        env:
          DATABASE_URL: "file:.test.db"
        run: |
          npm run setup
          npm run test:e2e
